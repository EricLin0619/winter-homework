/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyToken, MyTokenInterface } from "../../contracts/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "ReturnedRandomness",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "draw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001739380380620017398339810160408190526200003591620000d1565b816040518060400160405280600681526020016526bca132b0b760d11b815250604051806040016040528060048152602001632132b0b760e11b8152508160009081620000839190620001d4565b506001620000928282620001d4565b5050506001600160a01b039081166080529190911660a05260e052600880546001600160a01b031916331790556001600160401b031660c052620002a0565b600080600060608486031215620000e757600080fd5b83516001600160401b0381168114620000ff57600080fd5b60208501519093506001600160a01b03811681146200011d57600080fd5b80925050604084015190509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200015a57607f821691505b6020821081036200017b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cf57600081815260208120601f850160051c81016020861015620001aa5750805b601f850160051c820191505b81811015620001cb57828155600101620001b6565b5050505b505050565b81516001600160401b03811115620001f057620001f06200012f565b620002088162000201845462000145565b8462000181565b602080601f831160018114620002405760008415620002275750858301515b600019600386901b1c1916600185901b178555620001cb565b600085815260208120601f198616915b82811015620002715788860151825594840194600190910190840162000250565b5085821015620002905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051611458620002e1600039600061065d0152600061068c015260006106cd0152600081816103d4015261041601526114586000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063c87b56dd11610071578063c87b56dd14610259578063e0c862891461026c578063e89e106a14610274578063e985e9c51461027d578063f6eaffc81461029057600080fd5b80636352211e146101f757806370a082311461020a57806395d89b411461022b578063a22cb46514610233578063b88d4fde1461024657600080fd5b80630eecae21116100f45780630eecae21146101a35780631fe543e3146101ab57806323b872dd146101be57806342842e0e146101d15780634e6ec247146101e457600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004610f27565b6102a3565b60405190151581526020015b60405180910390f35b6101566102f5565b6040516101459190610f94565b610176610171366004610fa7565b610387565b6040516001600160a01b039091168152602001610145565b6101a161019c366004610fdc565b6103b0565b005b6101a16103bf565b6101a16101b936600461104d565b6103c9565b6101a16101cc3660046110ff565b610452565b6101a16101df3660046110ff565b6104dd565b6101a16101f2366004610fdc565b6104fd565b610176610205366004610fa7565b610562565b61021d61021836600461113b565b61056d565b604051908152602001610145565b6101566105b5565b6101a1610241366004611156565b6105c4565b6101a1610254366004611192565b6105cf565b610156610267366004610fa7565b6105e6565b6101a161064e565b61021d60075481565b61013961028b366004611252565b610768565b61021d61029e366004610fa7565b610796565b60006001600160e01b031982166380ac58cd60e01b14806102d457506001600160e01b03198216635b5e139f60e01b145b806102ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030490611285565b80601f016020809104026020016040519081016040528092919081815260200182805461033090611285565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b6000610392826107b7565b506000828152600460205260409020546001600160a01b03166102ef565b6103bb8282336107f0565b5050565b6103c761064e565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104485760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b6103bb82826107fd565b6001600160a01b03821661047c57604051633250574960e11b81526000600482015260240161043f565b6000610489838333610892565b9050836001600160a01b0316816001600160a01b0316146104d7576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161043f565b50505050565b6104f8838383604051806020016040528060008152506105cf565b505050565b6001600160a01b03821661052757604051633250574960e11b81526000600482015260240161043f565b600061053583836000610892565b90506001600160a01b038116156104f8576040516339e3563760e11b81526000600482015260240161043f565b60006102ef826107b7565b60006001600160a01b038216610599576040516322718ad960e21b81526000600482015260240161043f565b506001600160a01b031660009081526003602052604090205490565b60606001805461030490611285565b6103bb33838361098b565b6105da848484610452565b6104d784848484610a2a565b60606105f1826107b7565b5060006105fc610b53565b9050600081511161061c5760405180602001604052806000815250610647565b8061062684610b73565b6040516020016106379291906112bf565b6040516020818303038152906040525b9392505050565b6040516305d3b1d360e41b81527f0000000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016602482015260036044820152620186a06064820152600160848201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635d3b1d309060a4016020604051808303816000875af115801561071e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074291906112ee565b6007819055600090815260096020526040902080546001600160a01b0319163317905550565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600681815481106107a657600080fd5b600091825260209091200154905081565b6000818152600260205260408120546001600160a01b0316806102ef57604051637e27328960e01b81526004810184905260240161043f565b6104f88383836001610c06565b8051610810906006906020840190610eae565b506000828152600960205260408120548251610857926001600160a01b0390921691614def9185919061084557610845611307565b60200260200101516101f2919061131d565b7fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e81604051610886919061133f565b60405180910390a15050565b6000828152600260205260408120546001600160a01b03908116908316156108bf576108bf818486610d0c565b6001600160a01b038116156108fd576108dc600085600080610c06565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561092c576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b0382166109bd57604051630b61174360e31b81526001600160a01b038316600482015260240161043f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156104d757604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610a6c903390889087908790600401611383565b6020604051808303816000875af1925050508015610aa7575060408051601f3d908101601f19168201909252610aa4918101906113c0565b60015b610b10573d808015610ad5576040519150601f19603f3d011682016040523d82523d6000602084013e610ada565b606091505b508051600003610b0857604051633250574960e11b81526001600160a01b038516600482015260240161043f565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610b4c57604051633250574960e11b81526001600160a01b038516600482015260240161043f565b5050505050565b60606040518060800160405280604581526020016113de60459139905090565b60606000610b8083610d70565b600101905060008167ffffffffffffffff811115610ba057610ba0611006565b6040519080825280601f01601f191660200182016040528015610bca576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610bd457509392505050565b8080610c1a57506001600160a01b03821615155b15610cdc576000610c2a846107b7565b90506001600160a01b03831615801590610c565750826001600160a01b0316816001600160a01b031614155b8015610c695750610c678184610768565b155b15610c925760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161043f565b8115610cda5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610d17838383610e48565b6104f8576001600160a01b038316610d4557604051637e27328960e01b81526004810182905260240161043f565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161043f565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610daf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ddb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610df957662386f26fc10000830492506010015b6305f5e1008310610e11576305f5e100830492506008015b6127108310610e2557612710830492506004015b60648310610e37576064830492506002015b600a83106102ef5760010192915050565b60006001600160a01b03831615801590610ea65750826001600160a01b0316846001600160a01b03161480610e825750610e828484610768565b80610ea657506000828152600460205260409020546001600160a01b038481169116145b949350505050565b828054828255906000526020600020908101928215610ee9579160200282015b82811115610ee9578251825591602001919060010190610ece565b50610ef5929150610ef9565b5090565b5b80821115610ef55760008155600101610efa565b6001600160e01b031981168114610f2457600080fd5b50565b600060208284031215610f3957600080fd5b813561064781610f0e565b60005b83811015610f5f578181015183820152602001610f47565b50506000910152565b60008151808452610f80816020860160208601610f44565b601f01601f19169290920160200192915050565b6020815260006106476020830184610f68565b600060208284031215610fb957600080fd5b5035919050565b80356001600160a01b0381168114610fd757600080fd5b919050565b60008060408385031215610fef57600080fd5b610ff883610fc0565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561104557611045611006565b604052919050565b6000806040838503121561106057600080fd5b8235915060208084013567ffffffffffffffff8082111561108057600080fd5b818601915086601f83011261109457600080fd5b8135818111156110a6576110a6611006565b8060051b91506110b784830161101c565b81815291830184019184810190898411156110d157600080fd5b938501935b838510156110ef578435825293850193908501906110d6565b8096505050505050509250929050565b60008060006060848603121561111457600080fd5b61111d84610fc0565b925061112b60208501610fc0565b9150604084013590509250925092565b60006020828403121561114d57600080fd5b61064782610fc0565b6000806040838503121561116957600080fd5b61117283610fc0565b91506020830135801515811461118757600080fd5b809150509250929050565b600080600080608085870312156111a857600080fd5b6111b185610fc0565b935060206111c0818701610fc0565b935060408601359250606086013567ffffffffffffffff808211156111e457600080fd5b818801915088601f8301126111f857600080fd5b81358181111561120a5761120a611006565b61121c601f8201601f1916850161101c565b9150808252898482850101111561123257600080fd5b808484018584013760008482840101525080935050505092959194509250565b6000806040838503121561126557600080fd5b61126e83610fc0565b915061127c60208401610fc0565b90509250929050565b600181811c9082168061129957607f821691505b6020821081036112b957634e487b7160e01b600052602260045260246000fd5b50919050565b600083516112d1818460208801610f44565b8351908301906112e5818360208801610f44565b01949350505050565b60006020828403121561130057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008261133a57634e487b7160e01b600052601260045260246000fd5b500690565b6020808252825182820181905260009190848201906040850190845b818110156113775783518352928401929184019160010161135b565b50909695505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113b690830184610f68565b9695505050505050565b6000602082840312156113d257600080fd5b815161064781610f0e56fe697066733a2f2f516d64596544706b565a65646b316d6b476f646a4e6d463335554e7877616668464c567673487257674a6f7a36412f6265616e7a5f6d657461646174612fa264697066735822122029c0a6e9c385bb2bf7838ab88e7eb34171d711924fcdf55727f4dbe3981a253064736f6c63430008140033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    subscriptionId: BigNumberish,
    vrfCoordinator: AddressLike,
    keyHash: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    );
  }
  override deploy(
    subscriptionId: BigNumberish,
    vrfCoordinator: AddressLike,
    keyHash: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    ) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
