{"id":"5dbd96b744cb863a1935b4aa2d2d09f1","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/RandomNumberConsumerV2.sol":{"content":"// SPDX-License-Identifier: MIT\n// An example of a consumer contract that relies on a subscription for funding.\npragma solidity ^0.8.7;\n\nimport {VRFCoordinatorV2Interface} from \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport {VRFConsumerBaseV2} from \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\n\n/**\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n * DO NOT USE THIS CODE IN PRODUCTION.\n */\n\n/**\n * @title The RandomNumberConsumerV2 contract\n * @notice A contract that gets random values from Chainlink VRF V2\n */\ncontract RandomNumberConsumerV2 is VRFConsumerBaseV2 {\n    VRFCoordinatorV2Interface immutable COORDINATOR;\n\n    // Your subscription ID.\n    uint64 immutable s_subscriptionId;\n\n    // The gas lane to use, which specifies the maximum gas price to bump to.\n    // For a list of available gas lanes on each network,\n    // see https://docs.chain.link/docs/vrf-contracts/#configurations\n    bytes32 immutable s_keyHash;\n\n    // Depends on the number of requested values that you want sent to the\n    // fulfillRandomWords() function. Storing each word costs about 20,000 gas,\n    // so 100,000 is a safe default for this example contract. Test and adjust\n    // this limit based on the network that you select, the size of the request,\n    // and the processing of the callback request in the fulfillRandomWords()\n    // function.\n    uint32 constant CALLBACK_GAS_LIMIT = 100000;\n\n    // The default is 3, but you can set this higher.\n    uint16 constant REQUEST_CONFIRMATIONS = 3;\n\n    // For this example, retrieve 2 random values in one request.\n    // Cannot exceed VRFCoordinatorV2.MAX_NUM_WORDS.\n    uint32 constant NUM_WORDS = 1;\n\n    uint256[] public s_randomWords;\n    uint256 public s_requestId;\n    address s_owner;\n    mapping (uint256 => uint256) idToRandomNumber;\n\n    event ReturnedRandomness(uint256[] randomWords);\n\n    /**\n     * @notice Constructor inherits VRFConsumerBaseV2\n     *\n     * @param subscriptionId - the subscription ID that this contract uses for funding requests\n     * @param vrfCoordinator - coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations\n     * @param keyHash - the gas lane to use, which specifies the maximum gas price to bump to\n     */\n    constructor(\n        uint64 subscriptionId,\n        address vrfCoordinator,\n        bytes32 keyHash\n    ) VRFConsumerBaseV2(vrfCoordinator) {\n        COORDINATOR = VRFCoordinatorV2Interface(vrfCoordinator);\n        s_keyHash = keyHash;\n        s_owner = msg.sender;\n        s_subscriptionId = subscriptionId;\n    }\n\n    /**\n     * @notice Requests randomness\n     * Assumes the subscription is funded sufficiently; \"Words\" refers to unit of data in Computer Science\n     */\n    function requestRandomWords() public returns (uint256){\n        // Will revert if subscription is not set and funded.\n        uint256 requestId = COORDINATOR.requestRandomWords(\n            s_keyHash,\n            s_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            CALLBACK_GAS_LIMIT,\n            NUM_WORDS\n        );\n        s_requestId = requestId;\n        return requestId;\n    }\n\n    /**\n     * @notice Callback function used by VRF Coordinator\n     *\n     * @param requestId - id of the request\n     * @param randomWords - array of random results from VRF Coordinator\n     */\n    function fulfillRandomWords(\n        uint256 requestId,\n        uint256[] memory randomWords\n    ) internal override {\n        s_randomWords = randomWords;\n        idToRandomNumber[requestId] = randomWords[0];\n        emit ReturnedRandomness(randomWords);\n    }\n\n    function getNumber () public returns(uint256){\n        requestRandomWords();\n        uint256 randomNumber = s_randomWords[0] % 1001;\n        return randomNumber;\n    }\n    modifier onlyOwner() {\n        require(msg.sender == s_owner);\n        _;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[95]},"id":96,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":95,"linearizedBaseContracts":[95],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"97:267:0","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:0","nodeType":"FunctionDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"392:2:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"418:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"426:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"434:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9,"nodeType":"ArrayTypeName","src":"434:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:0"},"scope":95,"src":"367:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"456:1511:0","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":28,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:0","nodeType":"VariableDeclaration","scope":28,"src":"2003:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"subId","nameLocation":"2031:5:0","nodeType":"VariableDeclaration","scope":28,"src":"2024:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:0","nodeType":"VariableDeclaration","scope":28,"src":"2042:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":18,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:0","nodeType":"VariableDeclaration","scope":28,"src":"2082:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":20,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:0","nodeType":"VariableDeclaration","scope":28,"src":"2111:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":22,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:0"},"returnParameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:0","nodeType":"VariableDeclaration","scope":28,"src":"2149:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:0"},"scope":95,"src":"1970:198:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2172:384:0","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2586:2:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"subId","nameLocation":"2614:5:0","nodeType":"VariableDeclaration","scope":34,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:0"},"scope":95,"src":"2559:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"2625:381:0","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":49,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:0","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"subId","nameLocation":"3046:5:0","nodeType":"VariableDeclaration","scope":49,"src":"3039:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"balance","nameLocation":"3086:7:0","nodeType":"VariableDeclaration","scope":49,"src":"3079:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":39,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:0","nodeType":"VariableDeclaration","scope":49,"src":"3095:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"owner","nameLocation":"3120:5:0","nodeType":"VariableDeclaration","scope":49,"src":"3112:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:0","nodeType":"VariableDeclaration","scope":49,"src":"3127:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":46,"nodeType":"ArrayTypeName","src":"3127:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:0"},"scope":95,"src":"3009:146:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"3159:164:0","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:0","nodeType":"FunctionDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"subId","nameLocation":"3375:5:0","nodeType":"VariableDeclaration","scope":57,"src":"3368:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":51,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:0","nodeType":"VariableDeclaration","scope":57,"src":"3382:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"3408:0:0"},"scope":95,"src":"3326:83:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"3413:212:0","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"subId","nameLocation":"3676:5:0","nodeType":"VariableDeclaration","scope":63,"src":"3669:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":59,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"3691:0:0"},"scope":95,"src":"3628:64:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"3696:170:0","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"subId","nameLocation":"3897:5:0","nodeType":"VariableDeclaration","scope":71,"src":"3890:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":65,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"3930:0:0"},"scope":95,"src":"3869:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3935:172:0","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"subId","nameLocation":"4141:5:0","nodeType":"VariableDeclaration","scope":79,"src":"4134:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":73,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:0","nodeType":"VariableDeclaration","scope":79,"src":"4148:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:0"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"4174:0:0"},"scope":95,"src":"4110:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"4179:140:0","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":87,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"subId","nameLocation":"4357:5:0","nodeType":"VariableDeclaration","scope":87,"src":"4350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":81,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"to","nameLocation":"4372:2:0","nodeType":"VariableDeclaration","scope":87,"src":"4364:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"4384:0:0"},"scope":95,"src":"4322:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":94,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"subId","nameLocation":"4718:5:0","nodeType":"VariableDeclaration","scope":94,"src":"4711:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":88,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"4748:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":91,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:0"},"scope":95,"src":"4681:73:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":96,"src":"57:4699:0","usedErrors":[],"usedEvents":[]}],"src":"32:4725:0"},"id":0},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":97,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":98,"nodeType":"StructuredDocumentation","src":"57:5275:1","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:1","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":104,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:1","nodeType":"ErrorDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"have","nameLocation":"5413:4:1","nodeType":"VariableDeclaration","scope":104,"src":"5405:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"want","nameLocation":"5427:4:1","nodeType":"VariableDeclaration","scope":104,"src":"5419:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:1"},"src":"5373:60:1"},{"constant":false,"id":106,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:1","nodeType":"VariableDeclaration","scope":153,"src":"5436:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":116,"nodeType":"Block","src":"5593:43:1","statements":[{"expression":{"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":112,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"5599:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":113,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"5616:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":115,"nodeType":"ExpressionStatement","src":"5599:32:1"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5481:72:1","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":117,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:1","nodeType":"VariableDeclaration","scope":117,"src":"5568:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:1"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"5593:0:1"},"scope":153,"src":"5556:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"5640:686:1","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":126,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:1","nodeType":"VariableDeclaration","scope":126,"src":"6357:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:1","nodeType":"VariableDeclaration","scope":126,"src":"6376:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":122,"nodeType":"ArrayTypeName","src":"6376:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"6422:0:1"},"scope":153,"src":"6329:94:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":151,"nodeType":"Block","src":"6707:167:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:1","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":136,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6731:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"IfStatement","src":"6713:109:1","trueBody":{"id":144,"nodeType":"Block","src":"6747:75:1","statements":[{"errorCall":{"arguments":[{"expression":{"id":139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:1","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":141,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6800:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":138,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"6762:25:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"RevertStatement","src":"6755:60:1"}]}},{"expression":{"arguments":[{"id":147,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"6846:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":148,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"6857:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":146,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"6827:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"6827:42:1"}]},"functionSelector":"1fe543e3","id":152,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:1","nodeType":"VariableDeclaration","scope":152,"src":"6649:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:1","nodeType":"VariableDeclaration","scope":152,"src":"6668:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":130,"nodeType":"ArrayTypeName","src":"6668:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"6707:0:1"},"scope":153,"src":"6618:256:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":154,"src":"5333:1543:1","usedErrors":[104],"usedEvents":[]}],"src":"32:6845:1"},"id":1},"contracts/RandomNumberConsumerV2.sol":{"ast":{"absolutePath":"contracts/RandomNumberConsumerV2.sol","exportedSymbols":{"RandomNumberConsumerV2":[309],"VRFConsumerBaseV2":[153],"VRFCoordinatorV2Interface":[95]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"112:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":310,"sourceUnit":96,"src":"137:113:2","symbolAliases":[{"foreign":{"id":156,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"145:25:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":310,"sourceUnit":154,"src":"251:90:2","symbolAliases":[{"foreign":{"id":158,"name":"VRFConsumerBaseV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"259:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":161,"name":"VRFConsumerBaseV2","nameLocations":["677:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"677:17:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"677:17:2"}],"canonicalName":"RandomNumberConsumerV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"520:121:2","text":" @title The RandomNumberConsumerV2 contract\n @notice A contract that gets random values from Chainlink VRF V2"},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309,153],"name":"RandomNumberConsumerV2","nameLocation":"651:22:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":165,"mutability":"immutable","name":"COORDINATOR","nameLocation":"737:11:2","nodeType":"VariableDeclaration","scope":309,"src":"701:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":164,"nodeType":"UserDefinedTypeName","pathNode":{"id":163,"name":"VRFCoordinatorV2Interface","nameLocations":["701:25:2"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"701:25:2"},"referencedDeclaration":95,"src":"701:25:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"internal"},{"constant":false,"id":167,"mutability":"immutable","name":"s_subscriptionId","nameLocation":"801:16:2","nodeType":"VariableDeclaration","scope":309,"src":"784:33:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":166,"name":"uint64","nodeType":"ElementaryTypeName","src":"784:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"immutable","name":"s_keyHash","nameLocation":"1048:9:2","nodeType":"VariableDeclaration","scope":309,"src":"1030:27:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":172,"mutability":"constant","name":"CALLBACK_GAS_LIMIT","nameLocation":"1490:18:2","nodeType":"VariableDeclaration","scope":309,"src":"1474:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":170,"name":"uint32","nodeType":"ElementaryTypeName","src":"1474:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"313030303030","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1511:6:2","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"internal"},{"constant":true,"id":175,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1594:21:2","nodeType":"VariableDeclaration","scope":309,"src":"1578:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":173,"name":"uint16","nodeType":"ElementaryTypeName","src":"1578:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":178,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1761:9:2","nodeType":"VariableDeclaration","scope":309,"src":"1745:29:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":176,"name":"uint32","nodeType":"ElementaryTypeName","src":"1745:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1773:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"functionSelector":"f6eaffc8","id":181,"mutability":"mutable","name":"s_randomWords","nameLocation":"1798:13:2","nodeType":"VariableDeclaration","scope":309,"src":"1781:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1781:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ArrayTypeName","src":"1781:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"e89e106a","id":183,"mutability":"mutable","name":"s_requestId","nameLocation":"1832:11:2","nodeType":"VariableDeclaration","scope":309,"src":"1817:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":185,"mutability":"mutable","name":"s_owner","nameLocation":"1857:7:2","nodeType":"VariableDeclaration","scope":309,"src":"1849:15:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"idToRandomNumber","nameLocation":"1899:16:2","nodeType":"VariableDeclaration","scope":309,"src":"1870:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":188,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1870:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"anonymous":false,"eventSelector":"efb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e","id":194,"name":"ReturnedRandomness","nameLocation":"1928:18:2","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"indexed":false,"mutability":"mutable","name":"randomWords","nameLocation":"1957:11:2","nodeType":"VariableDeclaration","scope":194,"src":"1947:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":191,"nodeType":"ArrayTypeName","src":"1947:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1946:23:2"},"src":"1922:48:2"},{"body":{"id":226,"nodeType":"Block","src":"2492:174:2","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":207,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2502:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":209,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2542:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":208,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2516:25:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$95_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2502:55:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"id":212,"nodeType":"ExpressionStatement","src":"2502:55:2"},{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":213,"name":"s_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2567:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":214,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2579:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2567:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":216,"nodeType":"ExpressionStatement","src":"2567:19:2"},{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2606:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2610:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2606:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2596:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":221,"nodeType":"ExpressionStatement","src":"2596:20:2"},{"expression":{"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":222,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2626:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":223,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2645:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2626:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":225,"nodeType":"ExpressionStatement","src":"2626:33:2"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1976:371:2","text":" @notice Constructor inherits VRFConsumerBaseV2\n @param subscriptionId - the subscription ID that this contract uses for funding requests\n @param vrfCoordinator - coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations\n @param keyHash - the gas lane to use, which specifies the maximum gas price to bump to"},"id":227,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":204,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2476:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":205,"kind":"baseConstructorSpecifier","modifierName":{"id":203,"name":"VRFConsumerBaseV2","nameLocations":["2458:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2458:17:2"},"nodeType":"ModifierInvocation","src":"2458:33:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"subscriptionId","nameLocation":"2380:14:2","nodeType":"VariableDeclaration","scope":227,"src":"2373:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":196,"name":"uint64","nodeType":"ElementaryTypeName","src":"2373:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"2412:14:2","nodeType":"VariableDeclaration","scope":227,"src":"2404:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"2404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"keyHash","nameLocation":"2444:7:2","nodeType":"VariableDeclaration","scope":227,"src":"2436:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2436:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2363:94:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"2492:0:2"},"scope":309,"src":"2352:314:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":250,"nodeType":"Block","src":"2884:341:2","statements":[{"assignments":[234],"declarations":[{"constant":false,"id":234,"mutability":"mutable","name":"requestId","nameLocation":"2964:9:2","nodeType":"VariableDeclaration","scope":250,"src":"2956:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2956:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":243,"initialValue":{"arguments":[{"id":237,"name":"s_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"3020:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":238,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3043:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":239,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"3073:21:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":240,"name":"CALLBACK_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3108:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":241,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"3140:9:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":235,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2976:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2988:18:2","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":28,"src":"2976:30:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2976:183:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2956:203:2"},{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":244,"name":"s_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"3169:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":245,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3183:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3169:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":247,"nodeType":"ExpressionStatement","src":"3169:23:2"},{"expression":{"id":248,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3209:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":232,"id":249,"nodeType":"Return","src":"3202:16:2"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2672:153:2","text":" @notice Requests randomness\n Assumes the subscription is funded sufficiently; \"Words\" refers to unit of data in Computer Science"},"functionSelector":"e0c86289","id":251,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2839:18:2","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"2857:2:2"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":251,"src":"2876:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2875:9:2"},"scope":309,"src":"2830:395:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[126],"body":{"id":277,"nodeType":"Block","src":"3545:144:2","statements":[{"expression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":261,"name":"s_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"3555:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":262,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3571:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3555:27:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":264,"nodeType":"ExpressionStatement","src":"3555:27:2"},{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":265,"name":"idToRandomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3592:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":267,"indexExpression":{"id":266,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3609:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3592:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":268,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3622:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":270,"indexExpression":{"hexValue":"30","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3634:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3622:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3592:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":272,"nodeType":"ExpressionStatement","src":"3592:44:2"},{"eventCall":{"arguments":[{"id":274,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3670:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":273,"name":"ReturnedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3651:18:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3651:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":276,"nodeType":"EmitStatement","src":"3646:36:2"}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3231:192:2","text":" @notice Callback function used by VRF Coordinator\n @param requestId - id of the request\n @param randomWords - array of random results from VRF Coordinator"},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3437:18:2","nodeType":"FunctionDefinition","overrides":{"id":259,"nodeType":"OverrideSpecifier","overrides":[],"src":"3536:8:2"},"parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"requestId","nameLocation":"3473:9:2","nodeType":"VariableDeclaration","scope":278,"src":"3465:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3465:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"randomWords","nameLocation":"3509:11:2","nodeType":"VariableDeclaration","scope":278,"src":"3492:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":256,"nodeType":"ArrayTypeName","src":"3492:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3455:71:2"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"3545:0:2"},"scope":309,"src":"3428:261:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"3740:122:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"requestRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3750:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3750:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":285,"nodeType":"ExpressionStatement","src":"3750:20:2"},{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"randomNumber","nameLocation":"3788:12:2","nodeType":"VariableDeclaration","scope":296,"src":"3780:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":293,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":288,"name":"s_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"3803:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":290,"indexExpression":{"hexValue":"30","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3817:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3803:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"31303031","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3822:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1001_by_1","typeString":"int_const 1001"},"value":"1001"},"src":"3803:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3780:46:2"},{"expression":{"id":294,"name":"randomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3843:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":282,"id":295,"nodeType":"Return","src":"3836:19:2"}]},"functionSelector":"f2c9ecd8","id":297,"implemented":true,"kind":"function","modifiers":[],"name":"getNumber","nameLocation":"3704:9:2","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[],"src":"3714:2:2"},"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"3732:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3731:9:2"},"scope":309,"src":"3695:167:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":307,"nodeType":"Block","src":"3888:58:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":300,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3906:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3910:6:2","memberName":"sender","nodeType":"MemberAccess","src":"3906:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":302,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3920:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3906:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3898:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3898:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":305,"nodeType":"ExpressionStatement","src":"3898:30:2"},{"id":306,"nodeType":"PlaceholderStatement","src":"3938:1:2"}]},"id":308,"name":"onlyOwner","nameLocation":"3876:9:2","nodeType":"ModifierDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"3885:2:2"},"src":"3867:79:2","virtual":false,"visibility":"internal"}],"scope":310,"src":"642:3306:2","usedErrors":[104],"usedEvents":[194]}],"src":"112:3837:2"},"id":2}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]}},\"version\":1}"}},"contracts/RandomNumberConsumerV2.sol":{"RandomNumberConsumerV2":{"abi":[{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"address","name":"vrfCoordinator","type":"address"},{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"ReturnedRandomness","type":"event"},{"inputs":[],"name":"getNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_randomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_requestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_117":{"entryPoint":null,"id":117,"parameterSlots":1,"returnSlots":0},"@_227":{"entryPoint":null,"id":227,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_uint64t_addresst_bytes32_fromMemory":{"entryPoint":105,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:540:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"128:410:3","statements":[{"body":{"nodeType":"YulBlock","src":"174:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"183:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"186:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"176:6:3"},"nodeType":"YulFunctionCall","src":"176:12:3"},"nodeType":"YulExpressionStatement","src":"176:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"149:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"158:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"145:3:3"},"nodeType":"YulFunctionCall","src":"145:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"170:2:3","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"141:3:3"},"nodeType":"YulFunctionCall","src":"141:32:3"},"nodeType":"YulIf","src":"138:52:3"},{"nodeType":"YulVariableDeclaration","src":"199:29:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"218:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"212:5:3"},"nodeType":"YulFunctionCall","src":"212:16:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"203:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"290:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"299:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"302:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"292:6:3"},"nodeType":"YulFunctionCall","src":"292:12:3"},"nodeType":"YulExpressionStatement","src":"292:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"250:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"261:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"276:2:3","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"280:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"272:3:3"},"nodeType":"YulFunctionCall","src":"272:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"284:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"268:3:3"},"nodeType":"YulFunctionCall","src":"268:18:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"257:3:3"},"nodeType":"YulFunctionCall","src":"257:30:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"247:2:3"},"nodeType":"YulFunctionCall","src":"247:41:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"240:6:3"},"nodeType":"YulFunctionCall","src":"240:49:3"},"nodeType":"YulIf","src":"237:69:3"},{"nodeType":"YulAssignment","src":"315:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"325:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"315:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"339:40:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"364:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"375:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"360:3:3"},"nodeType":"YulFunctionCall","src":"360:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"354:5:3"},"nodeType":"YulFunctionCall","src":"354:25:3"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"343:7:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"446:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"455:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"458:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"448:6:3"},"nodeType":"YulFunctionCall","src":"448:12:3"},"nodeType":"YulExpressionStatement","src":"448:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"401:7:3"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"414:7:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"431:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"436:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"427:3:3"},"nodeType":"YulFunctionCall","src":"427:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"440:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"423:3:3"},"nodeType":"YulFunctionCall","src":"423:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"410:3:3"},"nodeType":"YulFunctionCall","src":"410:33:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"398:2:3"},"nodeType":"YulFunctionCall","src":"398:46:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"391:6:3"},"nodeType":"YulFunctionCall","src":"391:54:3"},"nodeType":"YulIf","src":"388:74:3"},{"nodeType":"YulAssignment","src":"471:17:3","value":{"name":"value_1","nodeType":"YulIdentifier","src":"481:7:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"471:6:3"}]},{"nodeType":"YulAssignment","src":"497:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:3"},"nodeType":"YulFunctionCall","src":"513:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"507:5:3"},"nodeType":"YulFunctionCall","src":"507:25:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"497:6:3"}]}]},"name":"abi_decode_tuple_t_uint64t_addresst_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"78:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"89:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"101:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"109:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"117:6:3","type":""}],"src":"14:524:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint64t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61010060405234801561001157600080fd5b5060405161064238038061064283398101604081905261003091610069565b6001600160a01b03909116608081905260a05260e052600280546001600160a01b031916331790556001600160401b031660c0526100c4565b60008060006060848603121561007e57600080fd5b83516001600160401b038116811461009557600080fd5b60208501519093506001600160a01b03811681146100b257600080fd5b80925050604084015190509250925092565b60805160a05160c05160e051610540610102600039600061014a01526000610179015260006101c401526000818160ba015260fc01526105406000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631fe543e31461005c578063e0c8628914610071578063e89e106a1461008b578063f2c9ecd814610094578063f6eaffc81461009c575b600080fd5b61006f61006a366004610392565b6100af565b005b61007961013b565b60405190815260200160405180910390f35b61007960015481565b61007961023c565b6100796100aa36600461045c565b61027a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461012d5760405163073e64fd60e21b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260440160405180910390fd5b610137828261029b565b5050565b6040516305d3b1d360e41b81527f0000000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016602482015260036044820152620186a060648201526001608482015260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635d3b1d309060a4016020604051808303816000875af115801561020d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102319190610475565b600181905592915050565b600061024661013b565b5060006103e96000808154811061025f5761025f61048e565b906000526020600020015461027491906104a4565b92915050565b6000818154811061028a57600080fd5b600091825260209091200154905081565b80516102ae90600090602084019061031c565b50806000815181106102c2576102c261048e565b602002602001015160036000848152602001908152602001600020819055507fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e8160405161031091906104c6565b60405180910390a15050565b828054828255906000526020600020908101928215610357579160200282015b8281111561035757825182559160200191906001019061033c565b50610363929150610367565b5090565b5b808211156103635760008155600101610368565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156103a557600080fd5b8235915060208084013567ffffffffffffffff808211156103c557600080fd5b818601915086601f8301126103d957600080fd5b8135818111156103eb576103eb61037c565b8060051b604051601f19603f830116810181811085821117156104105761041061037c565b60405291825284820192508381018501918983111561042e57600080fd5b938501935b8285101561044c57843584529385019392850192610433565b8096505050505050509250929050565b60006020828403121561046e57600080fd5b5035919050565b60006020828403121561048757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000826104c157634e487b7160e01b600052601260045260246000fd5b500690565b6020808252825182820181905260009190848201906040850190845b818110156104fe578351835292840192918401916001016104e2565b5090969550505050505056fea2646970667358221220b46f0f0c93e51b98975253821d32352e99f78557a3b5989dcfc889e0ae15bc8a64736f6c63430008140033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x642 CODESIZE SUB DUP1 PUSH2 0x642 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xE0 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0xC0 MSTORE PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x540 PUSH2 0x102 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x14A ADD MSTORE PUSH1 0x0 PUSH2 0x179 ADD MSTORE PUSH1 0x0 PUSH2 0x1C4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xBA ADD MSTORE PUSH1 0xFC ADD MSTORE PUSH2 0x540 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xE89E106A EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xF6EAFFC8 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x392 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x79 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x79 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x79 PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137 DUP3 DUP3 PUSH2 0x29B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x186A0 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 PUSH2 0x13B JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E9 PUSH1 0x0 DUP1 DUP2 SLOAD DUP2 LT PUSH2 0x25F JUMPI PUSH2 0x25F PUSH2 0x48E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2AE SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xEFB16D61046900DA527008568620FB9F8420E2F5ED4DE3BFBDED5035C9362B0E DUP2 PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x357 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x357 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x33C JUMP JUMPDEST POP PUSH2 0x363 SWAP3 SWAP2 POP PUSH2 0x367 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x368 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3EB JUMPI PUSH2 0x3EB PUSH2 0x37C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x44C JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x433 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FE JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4E2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH16 0xF0C93E51B98975253821D32352E99F7 DUP6 JUMPI LOG3 0xB5 SWAP9 SWAP14 0xCF 0xC8 DUP10 0xE0 0xAE ISZERO 0xBC DUP11 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"642:3306:2:-:0;;;2352:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5599:32:1;;;;;;;2502:55:2::1;::::0;2567:19:::1;::::0;2596:7:::1;:20:::0;;-1:-1:-1;;;;;;2596:20:2::1;2606:10;2596:20;::::0;;-1:-1:-1;;;;;2626:33:2::1;;::::0;642:3306;;14:524:3;101:6;109;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;212:16;;-1:-1:-1;;;;;257:30:3;;247:41;;237:69;;302:1;299;292:12;237:69;375:2;360:18;;354:25;325:5;;-1:-1:-1;;;;;;410:33:3;;398:46;;388:74;;458:1;455;448:12;388:74;481:7;471:17;;;528:2;517:9;513:18;507:25;497:35;;14:524;;;;;:::o;:::-;642:3306:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@fulfillRandomWords_278":{"entryPoint":667,"id":278,"parameterSlots":2,"returnSlots":0},"@getNumber_297":{"entryPoint":572,"id":297,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_152":{"entryPoint":175,"id":152,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_251":{"entryPoint":315,"id":251,"parameterSlots":0,"returnSlots":1},"@s_randomWords_181":{"entryPoint":634,"id":181,"parameterSlots":0,"returnSlots":0},"@s_requestId_183":{"entryPoint":null,"id":183,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_uint256":{"entryPoint":1116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":914,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":1188,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":1166,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":892,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3724:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:3"},"nodeType":"YulFunctionCall","src":"66:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:3"},"nodeType":"YulFunctionCall","src":"56:31:3"},"nodeType":"YulExpressionStatement","src":"56:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:3","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:3"},"nodeType":"YulFunctionCall","src":"96:15:3"},"nodeType":"YulExpressionStatement","src":"96:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:3"},"nodeType":"YulFunctionCall","src":"120:15:3"},"nodeType":"YulExpressionStatement","src":"120:15:3"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:3"},{"body":{"nodeType":"YulBlock","src":"258:1071:3","statements":[{"body":{"nodeType":"YulBlock","src":"304:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"313:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"316:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"306:6:3"},"nodeType":"YulFunctionCall","src":"306:12:3"},"nodeType":"YulExpressionStatement","src":"306:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"279:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"288:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"275:3:3"},"nodeType":"YulFunctionCall","src":"275:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"300:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"271:3:3"},"nodeType":"YulFunctionCall","src":"271:32:3"},"nodeType":"YulIf","src":"268:52:3"},{"nodeType":"YulAssignment","src":"329:33:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"352:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"339:12:3"},"nodeType":"YulFunctionCall","src":"339:23:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"329:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"371:12:3","value":{"kind":"number","nodeType":"YulLiteral","src":"381:2:3","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"375:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"392:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"423:9:3"},{"name":"_1","nodeType":"YulIdentifier","src":"434:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"419:3:3"},"nodeType":"YulFunctionCall","src":"419:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"406:12:3"},"nodeType":"YulFunctionCall","src":"406:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"396:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"447:28:3","value":{"kind":"number","nodeType":"YulLiteral","src":"457:18:3","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"451:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"502:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"511:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"514:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"504:6:3"},"nodeType":"YulFunctionCall","src":"504:12:3"},"nodeType":"YulExpressionStatement","src":"504:12:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"490:6:3"},{"name":"_2","nodeType":"YulIdentifier","src":"498:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"487:2:3"},"nodeType":"YulFunctionCall","src":"487:14:3"},"nodeType":"YulIf","src":"484:34:3"},{"nodeType":"YulVariableDeclaration","src":"527:32:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"541:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"552:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"537:3:3"},"nodeType":"YulFunctionCall","src":"537:22:3"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"531:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"607:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"616:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"619:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"609:6:3"},"nodeType":"YulFunctionCall","src":"609:12:3"},"nodeType":"YulExpressionStatement","src":"609:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"586:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"590:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:3"},"nodeType":"YulFunctionCall","src":"582:13:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"597:7:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"578:3:3"},"nodeType":"YulFunctionCall","src":"578:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"571:6:3"},"nodeType":"YulFunctionCall","src":"571:35:3"},"nodeType":"YulIf","src":"568:55:3"},{"nodeType":"YulVariableDeclaration","src":"632:26:3","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"655:2:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"642:12:3"},"nodeType":"YulFunctionCall","src":"642:16:3"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"636:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"681:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"683:16:3"},"nodeType":"YulFunctionCall","src":"683:18:3"},"nodeType":"YulExpressionStatement","src":"683:18:3"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"673:2:3"},{"name":"_2","nodeType":"YulIdentifier","src":"677:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"670:2:3"},"nodeType":"YulFunctionCall","src":"670:10:3"},"nodeType":"YulIf","src":"667:36:3"},{"nodeType":"YulVariableDeclaration","src":"712:20:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"726:1:3","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"729:2:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"722:3:3"},"nodeType":"YulFunctionCall","src":"722:10:3"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"716:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"741:23:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"761:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"755:5:3"},"nodeType":"YulFunctionCall","src":"755:9:3"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"745:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"773:56:3","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"795:6:3"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"811:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"815:2:3","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"807:3:3"},"nodeType":"YulFunctionCall","src":"807:11:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"824:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"820:3:3"},"nodeType":"YulFunctionCall","src":"820:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"803:3:3"},"nodeType":"YulFunctionCall","src":"803:25:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"791:3:3"},"nodeType":"YulFunctionCall","src":"791:38:3"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"777:10:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"888:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"890:16:3"},"nodeType":"YulFunctionCall","src":"890:18:3"},"nodeType":"YulExpressionStatement","src":"890:18:3"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"847:10:3"},{"name":"_2","nodeType":"YulIdentifier","src":"859:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"844:2:3"},"nodeType":"YulFunctionCall","src":"844:18:3"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"867:10:3"},{"name":"memPtr","nodeType":"YulIdentifier","src":"879:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"864:2:3"},"nodeType":"YulFunctionCall","src":"864:22:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"841:2:3"},"nodeType":"YulFunctionCall","src":"841:46:3"},"nodeType":"YulIf","src":"838:72:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"926:2:3","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"930:10:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"919:6:3"},"nodeType":"YulFunctionCall","src":"919:22:3"},"nodeType":"YulExpressionStatement","src":"919:22:3"},{"nodeType":"YulVariableDeclaration","src":"950:17:3","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"961:6:3"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"954:3:3","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"983:6:3"},{"name":"_4","nodeType":"YulIdentifier","src":"991:2:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"976:6:3"},"nodeType":"YulFunctionCall","src":"976:18:3"},"nodeType":"YulExpressionStatement","src":"976:18:3"},{"nodeType":"YulAssignment","src":"1003:22:3","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1014:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1022:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:3"},"nodeType":"YulFunctionCall","src":"1010:15:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1003:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"1034:34:3","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1056:2:3"},{"name":"_5","nodeType":"YulIdentifier","src":"1060:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1052:3:3"},"nodeType":"YulFunctionCall","src":"1052:11:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1065:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1048:3:3"},"nodeType":"YulFunctionCall","src":"1048:20:3"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1038:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1100:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1109:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1102:6:3"},"nodeType":"YulFunctionCall","src":"1102:12:3"},"nodeType":"YulExpressionStatement","src":"1102:12:3"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1083:6:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1091:7:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1080:2:3"},"nodeType":"YulFunctionCall","src":"1080:19:3"},"nodeType":"YulIf","src":"1077:39:3"},{"nodeType":"YulVariableDeclaration","src":"1125:22:3","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1140:2:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1144:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1136:3:3"},"nodeType":"YulFunctionCall","src":"1136:11:3"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1129:3:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1212:86:3","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1233:3:3"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1251:3:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1238:12:3"},"nodeType":"YulFunctionCall","src":"1238:17:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1226:6:3"},"nodeType":"YulFunctionCall","src":"1226:30:3"},"nodeType":"YulExpressionStatement","src":"1226:30:3"},{"nodeType":"YulAssignment","src":"1269:19:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1280:3:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1285:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1276:3:3"},"nodeType":"YulFunctionCall","src":"1276:12:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1269:3:3"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1167:3:3"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1172:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1164:2:3"},"nodeType":"YulFunctionCall","src":"1164:15:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1180:23:3","statements":[{"nodeType":"YulAssignment","src":"1182:19:3","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1193:3:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1198:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1189:3:3"},"nodeType":"YulFunctionCall","src":"1189:12:3"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1182:3:3"}]}]},"pre":{"nodeType":"YulBlock","src":"1160:3:3","statements":[]},"src":"1156:142:3"},{"nodeType":"YulAssignment","src":"1307:16:3","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1317:6:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1307:6:3"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"216:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"227:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"239:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"247:6:3","type":""}],"src":"146:1183:3"},{"body":{"nodeType":"YulBlock","src":"1435:76:3","statements":[{"nodeType":"YulAssignment","src":"1445:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1457:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1468:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1453:3:3"},"nodeType":"YulFunctionCall","src":"1453:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1445:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1487:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"1498:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1480:6:3"},"nodeType":"YulFunctionCall","src":"1480:25:3"},"nodeType":"YulExpressionStatement","src":"1480:25:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1404:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1415:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1426:4:3","type":""}],"src":"1334:177:3"},{"body":{"nodeType":"YulBlock","src":"1586:110:3","statements":[{"body":{"nodeType":"YulBlock","src":"1632:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1641:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1644:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1634:6:3"},"nodeType":"YulFunctionCall","src":"1634:12:3"},"nodeType":"YulExpressionStatement","src":"1634:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1607:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1616:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1603:3:3"},"nodeType":"YulFunctionCall","src":"1603:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1628:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1599:3:3"},"nodeType":"YulFunctionCall","src":"1599:32:3"},"nodeType":"YulIf","src":"1596:52:3"},{"nodeType":"YulAssignment","src":"1657:33:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1680:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1667:12:3"},"nodeType":"YulFunctionCall","src":"1667:23:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1657:6:3"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1552:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1563:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1575:6:3","type":""}],"src":"1516:180:3"},{"body":{"nodeType":"YulBlock","src":"1830:175:3","statements":[{"nodeType":"YulAssignment","src":"1840:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1852:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1863:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1848:3:3"},"nodeType":"YulFunctionCall","src":"1848:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1840:4:3"}]},{"nodeType":"YulVariableDeclaration","src":"1875:29:3","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1893:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1898:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1889:3:3"},"nodeType":"YulFunctionCall","src":"1889:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"1902:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1885:3:3"},"nodeType":"YulFunctionCall","src":"1885:19:3"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1879:2:3","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1920:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1935:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1943:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:3"},"nodeType":"YulFunctionCall","src":"1931:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1913:6:3"},"nodeType":"YulFunctionCall","src":"1913:34:3"},"nodeType":"YulExpressionStatement","src":"1913:34:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1967:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1978:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1963:3:3"},"nodeType":"YulFunctionCall","src":"1963:18:3"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1987:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1995:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1983:3:3"},"nodeType":"YulFunctionCall","src":"1983:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1956:6:3"},"nodeType":"YulFunctionCall","src":"1956:43:3"},"nodeType":"YulExpressionStatement","src":"1956:43:3"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1791:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1802:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1810:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1821:4:3","type":""}],"src":"1701:304:3"},{"body":{"nodeType":"YulBlock","src":"2215:335:3","statements":[{"nodeType":"YulAssignment","src":"2225:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2237:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2248:3:3","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2233:3:3"},"nodeType":"YulFunctionCall","src":"2233:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2225:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2268:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"2279:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2261:6:3"},"nodeType":"YulFunctionCall","src":"2261:25:3"},"nodeType":"YulExpressionStatement","src":"2261:25:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2306:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2317:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2302:3:3"},"nodeType":"YulFunctionCall","src":"2302:18:3"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2326:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2334:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2322:3:3"},"nodeType":"YulFunctionCall","src":"2322:31:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2295:6:3"},"nodeType":"YulFunctionCall","src":"2295:59:3"},"nodeType":"YulExpressionStatement","src":"2295:59:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2374:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2385:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2370:3:3"},"nodeType":"YulFunctionCall","src":"2370:18:3"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2394:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2402:6:3","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2390:3:3"},"nodeType":"YulFunctionCall","src":"2390:19:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:3"},"nodeType":"YulFunctionCall","src":"2363:47:3"},"nodeType":"YulExpressionStatement","src":"2363:47:3"},{"nodeType":"YulVariableDeclaration","src":"2419:20:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2429:10:3","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2423:2:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2459:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2470:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2455:3:3"},"nodeType":"YulFunctionCall","src":"2455:18:3"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2479:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2487:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2475:3:3"},"nodeType":"YulFunctionCall","src":"2475:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2448:6:3"},"nodeType":"YulFunctionCall","src":"2448:43:3"},"nodeType":"YulExpressionStatement","src":"2448:43:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2511:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2522:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2507:3:3"},"nodeType":"YulFunctionCall","src":"2507:19:3"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2532:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2540:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2528:3:3"},"nodeType":"YulFunctionCall","src":"2528:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2500:6:3"},"nodeType":"YulFunctionCall","src":"2500:44:3"},"nodeType":"YulExpressionStatement","src":"2500:44:3"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2152:9:3","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2163:6:3","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2171:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2179:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2187:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2195:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2206:4:3","type":""}],"src":"2010:540:3"},{"body":{"nodeType":"YulBlock","src":"2636:103:3","statements":[{"body":{"nodeType":"YulBlock","src":"2682:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2691:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2694:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2684:6:3"},"nodeType":"YulFunctionCall","src":"2684:12:3"},"nodeType":"YulExpressionStatement","src":"2684:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2657:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2666:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2653:3:3"},"nodeType":"YulFunctionCall","src":"2653:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2678:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2649:3:3"},"nodeType":"YulFunctionCall","src":"2649:32:3"},"nodeType":"YulIf","src":"2646:52:3"},{"nodeType":"YulAssignment","src":"2707:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2723:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2717:5:3"},"nodeType":"YulFunctionCall","src":"2717:16:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2707:6:3"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2602:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2613:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2625:6:3","type":""}],"src":"2555:184:3"},{"body":{"nodeType":"YulBlock","src":"2776:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2793:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2800:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2805:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2796:3:3"},"nodeType":"YulFunctionCall","src":"2796:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2786:6:3"},"nodeType":"YulFunctionCall","src":"2786:31:3"},"nodeType":"YulExpressionStatement","src":"2786:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2833:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2836:4:3","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2826:6:3"},"nodeType":"YulFunctionCall","src":"2826:15:3"},"nodeType":"YulExpressionStatement","src":"2826:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2857:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2860:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2850:6:3"},"nodeType":"YulFunctionCall","src":"2850:15:3"},"nodeType":"YulExpressionStatement","src":"2850:15:3"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"2744:127:3"},{"body":{"nodeType":"YulBlock","src":"2914:171:3","statements":[{"body":{"nodeType":"YulBlock","src":"2945:111:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2973:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2978:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2969:3:3"},"nodeType":"YulFunctionCall","src":"2969:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2959:6:3"},"nodeType":"YulFunctionCall","src":"2959:31:3"},"nodeType":"YulExpressionStatement","src":"2959:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3010:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3013:4:3","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:3"},"nodeType":"YulFunctionCall","src":"3003:15:3"},"nodeType":"YulExpressionStatement","src":"3003:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3038:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3041:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3031:6:3"},"nodeType":"YulFunctionCall","src":"3031:15:3"},"nodeType":"YulExpressionStatement","src":"3031:15:3"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2934:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2927:6:3"},"nodeType":"YulFunctionCall","src":"2927:9:3"},"nodeType":"YulIf","src":"2924:132:3"},{"nodeType":"YulAssignment","src":"3065:14:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3074:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3077:1:3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3070:3:3"},"nodeType":"YulFunctionCall","src":"3070:9:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3065:1:3"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2899:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"2902:1:3","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2908:1:3","type":""}],"src":"2876:209:3"},{"body":{"nodeType":"YulBlock","src":"3241:481:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3251:12:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3261:2:3","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3255:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3272:32:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3290:9:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3301:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3286:3:3"},"nodeType":"YulFunctionCall","src":"3286:18:3"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3276:6:3","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3331:2:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3313:6:3"},"nodeType":"YulFunctionCall","src":"3313:21:3"},"nodeType":"YulExpressionStatement","src":"3313:21:3"},{"nodeType":"YulVariableDeclaration","src":"3343:17:3","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3354:6:3"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3347:3:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3369:27:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3389:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3383:5:3"},"nodeType":"YulFunctionCall","src":"3383:13:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3373:6:3","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3412:6:3"},{"name":"length","nodeType":"YulIdentifier","src":"3420:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3405:6:3"},"nodeType":"YulFunctionCall","src":"3405:22:3"},"nodeType":"YulExpressionStatement","src":"3405:22:3"},{"nodeType":"YulAssignment","src":"3436:25:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3447:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3458:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3443:3:3"},"nodeType":"YulFunctionCall","src":"3443:18:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3436:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"3470:29:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3488:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3496:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3484:3:3"},"nodeType":"YulFunctionCall","src":"3484:15:3"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3474:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3508:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3517:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3512:1:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3576:120:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3597:3:3"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3608:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3602:5:3"},"nodeType":"YulFunctionCall","src":"3602:13:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3590:6:3"},"nodeType":"YulFunctionCall","src":"3590:26:3"},"nodeType":"YulExpressionStatement","src":"3590:26:3"},{"nodeType":"YulAssignment","src":"3629:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3640:3:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3645:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3636:3:3"},"nodeType":"YulFunctionCall","src":"3636:12:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3629:3:3"}]},{"nodeType":"YulAssignment","src":"3661:25:3","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3675:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3683:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3671:3:3"},"nodeType":"YulFunctionCall","src":"3671:15:3"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3661:6:3"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3538:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"3541:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3535:2:3"},"nodeType":"YulFunctionCall","src":"3535:13:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3549:18:3","statements":[{"nodeType":"YulAssignment","src":"3551:14:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3560:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"3563:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:3"},"nodeType":"YulFunctionCall","src":"3556:9:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3551:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"3531:3:3","statements":[]},"src":"3527:169:3"},{"nodeType":"YulAssignment","src":"3705:11:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"3713:3:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3705:4:3"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3210:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3221:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3232:4:3","type":""}],"src":"3090:632:3"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffff))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"106":[{"length":32,"start":186},{"length":32,"start":252}],"165":[{"length":32,"start":452}],"167":[{"length":32,"start":377}],"169":[{"length":32,"start":330}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80631fe543e31461005c578063e0c8628914610071578063e89e106a1461008b578063f2c9ecd814610094578063f6eaffc81461009c575b600080fd5b61006f61006a366004610392565b6100af565b005b61007961013b565b60405190815260200160405180910390f35b61007960015481565b61007961023c565b6100796100aa36600461045c565b61027a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461012d5760405163073e64fd60e21b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260440160405180910390fd5b610137828261029b565b5050565b6040516305d3b1d360e41b81527f0000000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016602482015260036044820152620186a060648201526001608482015260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635d3b1d309060a4016020604051808303816000875af115801561020d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102319190610475565b600181905592915050565b600061024661013b565b5060006103e96000808154811061025f5761025f61048e565b906000526020600020015461027491906104a4565b92915050565b6000818154811061028a57600080fd5b600091825260209091200154905081565b80516102ae90600090602084019061031c565b50806000815181106102c2576102c261048e565b602002602001015160036000848152602001908152602001600020819055507fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e8160405161031091906104c6565b60405180910390a15050565b828054828255906000526020600020908101928215610357579160200282015b8281111561035757825182559160200191906001019061033c565b50610363929150610367565b5090565b5b808211156103635760008155600101610368565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156103a557600080fd5b8235915060208084013567ffffffffffffffff808211156103c557600080fd5b818601915086601f8301126103d957600080fd5b8135818111156103eb576103eb61037c565b8060051b604051601f19603f830116810181811085821117156104105761041061037c565b60405291825284820192508381018501918983111561042e57600080fd5b938501935b8285101561044c57843584529385019392850192610433565b8096505050505050509250929050565b60006020828403121561046e57600080fd5b5035919050565b60006020828403121561048757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000826104c157634e487b7160e01b600052601260045260246000fd5b500690565b6020808252825182820181905260009190848201906040850190845b818110156104fe578351835292840192918401916001016104e2565b5090969550505050505056fea2646970667358221220b46f0f0c93e51b98975253821d32352e99f78557a3b5989dcfc889e0ae15bc8a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xE89E106A EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xF6EAFFC8 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x392 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x79 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x79 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x79 PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137 DUP3 DUP3 PUSH2 0x29B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x186A0 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 PUSH2 0x13B JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E9 PUSH1 0x0 DUP1 DUP2 SLOAD DUP2 LT PUSH2 0x25F JUMPI PUSH2 0x25F PUSH2 0x48E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2AE SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xEFB16D61046900DA527008568620FB9F8420E2F5ED4DE3BFBDED5035C9362B0E DUP2 PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x357 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x357 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x33C JUMP JUMPDEST POP PUSH2 0x363 SWAP3 SWAP2 POP PUSH2 0x367 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x368 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3EB JUMPI PUSH2 0x3EB PUSH2 0x37C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x44C JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x433 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FE JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4E2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH16 0xF0C93E51B98975253821D32352E99F7 DUP6 JUMPI LOG3 0xB5 SWAP9 SWAP14 0xCF 0xC8 DUP10 0xE0 0xAE ISZERO 0xBC DUP11 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"642:3306:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6618:256:1;;;;;;:::i;:::-;;:::i;:::-;;2830:395:2;;;:::i;:::-;;;1480:25:3;;;1468:2;1453:18;2830:395:2;;;;;;;1817:26;;;;;;3695:167;;;:::i;1781:30::-;;;;;;:::i;:::-;;:::i;6618:256:1:-;6717:10;-1:-1:-1;;;;;6731:14:1;6717:28;;6713:109;;6762:53;;-1:-1:-1;;;6762:53:1;;6788:10;6762:53;;;1913:34:3;-1:-1:-1;;;;;6800:14:1;1983:15:3;1963:18;;;1956:43;1848:18;;6762:53:1;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;2830:395:2:-;2976:183;;-1:-1:-1;;;2976:183:2;;3020:9;2976:183;;;2261:25:3;2334:18;3043:16:2;2322:31:3;2302:18;;;2295:59;1618:1:2;2370:18:3;;;2363:47;1511:6:2;2455:18:3;;;2448:43;1773:1:2;2507:19:3;;;2500:44;2876:7:2;;;;-1:-1:-1;;;;;2976:11:2;:30;;;;2233:19:3;;2976:183:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3169:11;:23;;;2956:203;2830:395;-1:-1:-1;;2830:395:2:o;3695:167::-;3732:7;3750:20;:18;:20::i;:::-;;3780;3822:4;3803:13;3817:1;3803:16;;;;;;;;:::i;:::-;;;;;;;;;:23;;;;:::i;:::-;3780:46;3695:167;-1:-1:-1;;3695:167:2:o;1781:30::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1781:30:2;:::o;3428:261::-;3555:27;;;;:13;;:27;;;;;:::i;:::-;;3622:11;3634:1;3622:14;;;;;;;;:::i;:::-;;;;;;;3592:16;:27;3609:9;3592:27;;;;;;;;;;;:44;;;;3651:31;3670:11;3651:31;;;;;;:::i;:::-;;;;;;;;3428:261;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1183;239:6;247;300:2;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;352:9;339:23;329:33;;381:2;434;423:9;419:18;406:32;457:18;498:2;490:6;487:14;484:34;;;514:1;511;504:12;484:34;552:6;541:9;537:22;527:32;;597:7;590:4;586:2;582:13;578:27;568:55;;619:1;616;609:12;568:55;655:2;642:16;677:2;673;670:10;667:36;;;683:18;;:::i;:::-;729:2;726:1;722:10;761:2;755:9;824:2;820:7;815:2;811;807:11;803:25;795:6;791:38;879:6;867:10;864:22;859:2;847:10;844:18;841:46;838:72;;;890:18;;:::i;:::-;926:2;919:22;976:18;;;1010:15;;;;-1:-1:-1;1052:11:3;;;1048:20;;;1080:19;;;1077:39;;;1112:1;1109;1102:12;1077:39;1136:11;;;;1156:142;1172:6;1167:3;1164:15;1156:142;;;1238:17;;1226:30;;1189:12;;;;1276;;;;1156:142;;;1317:6;1307:16;;;;;;;;146:1183;;;;;:::o;1516:180::-;1575:6;1628:2;1616:9;1607:7;1603:23;1599:32;1596:52;;;1644:1;1641;1634:12;1596:52;-1:-1:-1;1667:23:3;;1516:180;-1:-1:-1;1516:180:3:o;2555:184::-;2625:6;2678:2;2666:9;2657:7;2653:23;2649:32;2646:52;;;2694:1;2691;2684:12;2646:52;-1:-1:-1;2717:16:3;;2555:184;-1:-1:-1;2555:184:3:o;2744:127::-;2805:10;2800:3;2796:20;2793:1;2786:31;2836:4;2833:1;2826:15;2860:4;2857:1;2850:15;2876:209;2908:1;2934;2924:132;;2978:10;2973:3;2969:20;2966:1;2959:31;3013:4;3010:1;3003:15;3041:4;3038:1;3031:15;2924:132;-1:-1:-1;3070:9:3;;2876:209::o;3090:632::-;3261:2;3313:21;;;3383:13;;3286:18;;;3405:22;;;3232:4;;3261:2;3484:15;;;;3458:2;3443:18;;;3232:4;3527:169;3541:6;3538:1;3535:13;3527:169;;;3602:13;;3590:26;;3671:15;;;;3636:12;;;;3563:1;3556:9;3527:169;;;-1:-1:-1;3713:3:3;;3090:632;-1:-1:-1;;;;;;3090:632:3:o"},"methodIdentifiers":{"getNumber()":"f2c9ecd8","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestRandomWords()":"e0c86289","s_randomWords(uint256)":"f6eaffc8","s_requestId()":"e89e106a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"ReturnedRandomness\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_randomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_requestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"keyHash\":\"- the gas lane to use, which specifies the maximum gas price to bump to\",\"subscriptionId\":\"- the subscription ID that this contract uses for funding requests\",\"vrfCoordinator\":\"- coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations\"}}},\"title\":\"The RandomNumberConsumerV2 contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor inherits VRFConsumerBaseV2\"},\"requestRandomWords()\":{\"notice\":\"Requests randomness Assumes the subscription is funded sufficiently; \\\"Words\\\" refers to unit of data in Computer Science\"}},\"notice\":\"A contract that gets random values from Chainlink VRF V2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomNumberConsumerV2.sol\":\"RandomNumberConsumerV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]},\"contracts/RandomNumberConsumerV2.sol\":{\"keccak256\":\"0x0024fcfdd5c2d84a22f819ab2e81f0ce524a4f9f4b8587f6e1ecf25115a912d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb585d3a7d05b6e9bcad6a5e9a9311546a177e809e48207ce041bbda9f34bd1e\",\"dweb:/ipfs/Qmb73QCR7DD3ceHUK6kByYXdVrD4y5Wd7SZtzoCchEuEij\"]}},\"version\":1}"}}}}}